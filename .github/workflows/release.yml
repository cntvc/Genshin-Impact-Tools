name: Release

env:
  PROJECT_NAME: Genshin_Impact_Tools


on:
  workflow_dispatch:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    defaults:
      run:
        shell: powershell
    strategy:
      matrix:
        include:
          - os: windows-latest
            python-version: "3.9"
            extra-name: ""
          - os: windows-2019
            python-version: "3.7"
            extra-name: "_win7"
    
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python version
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Cache Python packages
      id: cache-pip
      uses: actions/cache@v3
      env:
        cache-name: cache-python-${{ matrix.python-version }}
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ env.cache-name }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-${{ env.cache-name }}-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Package as exe
      run: pyinstaller --clean ./main.spec

    - name: Set file name
      run: |
        echo "file-name=${{ env.PROJECT_NAME }}${{ matrix.extra-name }}_${{ github.ref_name }}" >> $env:GITHUB_ENV

    - name: Rename file and create Zip
      run: |
        Rename-Item -Path dist\${{ env.PROJECT_NAME }}.exe ${{ env.file-name }}.exe
        Compress-Archive dist\${{ env.file-name }}.exe ${{ env.file-name }}.zip

    - name: Release
      uses: softprops/action-gh-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.PROJECT_NAME }} ${{ github.ref_name }}
        body: CHANGELOG.md
        tag_name: ${{ github.ref_name }}
        files: ${{ env.file-name }}.zip
        draft: false
        prerelease: false
